# Simplified Data Upload Flow with Global Schema Management

## Overview

This document outlines the requirements for a simplified data upload flow that incorporates global schema management. The new flow will streamline the process of uploading and managing data files, allowing users to create a unified schema across multiple uploads while removing the current file activation steps.

## Current System Analysis

The current system has the following components:
- File upload functionality for CSV and XLSX files
- File activation process that creates database views
- Schema management capabilities that are not fully integrated into the upload flow
- Column mapping functionality for mapping file columns to schema columns

## Requirements

### 1. Project Creation and Dashboard

Users should be able to create a new project. Upon project creation, users should be automatically directed to the dashboard for that project. The dashboard should provide clear access to the data upload functionality.

### 2. File Upload

Users should be able to upload CSV or XLSX files from the project dashboard. The system should validate file formats and provide appropriate error messages. The upload interface should show progress and status information. The existing file activation step should be removed from the user flow.

### 3. Global Schema Management

First Upload (Schema Creation):
- After the first file upload, users should be presented with the file's columns.
- Users should be able to select which columns to include in the global schema.
- Users should be able to provide names and descriptions for the global schema.
- The system should automatically detect column data types.

Subsequent Uploads (Schema Mapping and Evolution):
- For subsequent uploads, the system should identify new columns not present in the global schema.
- Users should be able to map new file columns to existing schema columns.
- Users should have the option to add new columns to the global schema.
- The mapping interface should support transformation rules for data normalization.

### 4. Data Storage and Normalization

All uploaded data should be stored in a normalized database structure. The system should maintain relationships between the original files and the normalized data. The normalized data should be accessible for querying and analysis.

### 5. User Experience

The entire flow should be intuitive and require minimal steps. Clear feedback should be provided at each step of the process. Users should be able to view and manage their global schema at any time. The interface should provide options to edit or update the schema as needed.

## Technical Requirements

### 1. Backend Changes

Modify the file ingestion process to bypass the current activation step. Enhance the schema management service to support the new flow. Implement automatic schema detection and column mapping. Create APIs for managing the global schema and column mappings.

### 2. Frontend Changes

Create a new project creation interface. Modify the file upload component to integrate with the new flow. Develop a schema management interface for the first upload. Develop a column mapping interface for subsequent uploads. Update the dashboard to reflect the new workflow.

### 3. Database Changes

Ensure the database schema supports the normalized data structure. Implement efficient storage and retrieval mechanisms. Maintain metadata about files, schemas, and mappings.

## Success Criteria

1. Users can create projects and upload files in a streamlined process.
2. The system successfully creates and maintains a global schema across multiple file uploads.
3. New columns from subsequent uploads can be mapped to the global schema.
4. All data is stored in a normalized structure for efficient querying.
5. The entire process requires fewer steps than the current implementation.

## Implementation Details

The desired data upload flow should be:

1. User creates a project
2. User is sent to the dashboard for that project
3. User uploads csv or xslx
4. They are presented with the available file's columns which they can include/remove to create a global schema
5. Every other upload after the first one will introduce new columns to add to the global schema and allow for mapping of the new data to the existing global schema. The new columns will be opt-in by user if desired.
6. All the data is stored in a normalized view or database for future discovery

Any existing steps in the upload flow, including file activation, should be removed from the app to simplify the upload flow.
